{"ast":null,"code":"var _jsxFileName = \"D:\\\\cdrlu\\\\Documents\\\\twitch_chatbot\\\\lubebot_site\\\\react-app\\\\src\\\\pages\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport \"./home.css\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counts: [],\n      users: [],\n      encounters: [],\n      intervalIsSet: false\n    };\n\n    this.getDataFromDb = () => {\n      fetch(\"/api/getCounts\").then(data => data.json()).then(res => this.setState({\n        counts: res.data\n      }));\n      fetch(\"/api/getUsers\").then(data => data.json()).then(res => this.setState({\n        users: res.data\n      }));\n      fetch(\"/api/getEncounters\").then(data => data.json()).then(res => this.setState({\n        encounters: res.data\n      }));\n    };\n  }\n\n  // when component mounts, first thing it does is fetch all existing data in our db\n  // then we incorporate a polling logic so that we can easily see if our db has\n  // changed and implement those changes into our UI\n  componentDidMount() {\n    this.getDataFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  } // never let a process live forever\n  // always kill a process everytime we are done using it\n\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          counts = _this$state.counts,\n          users = _this$state.users,\n          encounters = _this$state.encounters;\n    return React.createElement(\"div\", {\n      id: \"home-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://www.twitch.tv/keeelaan\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Keeelaan\"), React.createElement(\"a\", {\n      href: \"https://www.twitch.tv/lubesy\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Lubesy\"), React.createElement(\"a\", {\n      href: \"https://www.twitch.tv/drewbertdoo\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"DrewbertDoo\"), React.createElement(\"a\", {\n      href: \"https://www.twitch.tv/sethe_1\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Sethe_1\"), React.createElement(\"a\", {\n      href: \"https://www.twitch.tv/lessthandennis\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"LessThanDennis\")), React.createElement(\"div\", {\n      class: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Counts:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, counts.map(r => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, r.name, \": \", r.total);\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Users:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, users.map(r => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, r.name, \", \", r.class, \": \", r.chats);\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Encounters:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, encounters.map(r => {\n      console.log(r.name);\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, r.player.name, \": \", r.monster.name);\n    })))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["D:\\cdrlu\\Documents\\twitch_chatbot\\lubebot_site\\react-app\\src\\pages\\Home.js"],"names":["React","Component","Home","state","counts","users","encounters","intervalIsSet","getDataFromDb","fetch","then","data","json","res","setState","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","map","r","name","total","class","chats","console","log","player","monster"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./home.css\";\r\n\r\nclass Home extends Component {\r\n  // initialize our state\r\n  state = {\r\n    counts: [],\r\n    users: [],\r\n    encounters: [],\r\n    intervalIsSet: false\r\n  };\r\n\r\n  // when component mounts, first thing it does is fetch all existing data in our db\r\n  // then we incorporate a polling logic so that we can easily see if our db has\r\n  // changed and implement those changes into our UI\r\n  componentDidMount() {\r\n    this.getDataFromDb();\r\n    if (!this.state.intervalIsSet) {\r\n      let interval = setInterval(this.getDataFromDb, 1000);\r\n      this.setState({ intervalIsSet: interval });\r\n    }\r\n  }\r\n\r\n  // never let a process live forever\r\n  // always kill a process everytime we are done using it\r\n  componentWillUnmount() {\r\n    if (this.state.intervalIsSet) {\r\n      clearInterval(this.state.intervalIsSet);\r\n      this.setState({ intervalIsSet: null });\r\n    }\r\n  }\r\n\r\n  getDataFromDb = () => {\r\n    fetch(\"/api/getCounts\")\r\n      .then(data => data.json())\r\n      .then(res => this.setState({ counts: res.data }));\r\n\r\n    fetch(\"/api/getUsers\")\r\n      .then(data => data.json())\r\n      .then(res => this.setState({ users: res.data }));\r\n\r\n    fetch(\"/api/getEncounters\")\r\n      .then(data => data.json())\r\n      .then(res => this.setState({ encounters: res.data }));\r\n  };\r\n\r\n  render() {\r\n    const { counts, users, encounters } = this.state;\r\n    return (\r\n      <div id=\"home-main\">\r\n        <div id=\"navbar\">\r\n          <a href=\"https://www.twitch.tv/keeelaan\" target=\"_blank\">Keeelaan</a>\r\n          <a href=\"https://www.twitch.tv/lubesy\" target=\"_blank\">Lubesy</a>\r\n          <a href=\"https://www.twitch.tv/drewbertdoo\" target=\"_blank\">DrewbertDoo</a>\r\n          <a href=\"https://www.twitch.tv/sethe_1\" target=\"_blank\">Sethe_1</a>\r\n          <a href=\"https://www.twitch.tv/lessthandennis\" target=\"_blank\">LessThanDennis</a>\r\n        </div>\r\n        <div class=\"jumbotron\">\r\n          \r\n        </div>\r\n        <div id=\"stats\">\r\n          <div>\r\n            <h1>Counts:</h1>\r\n            <ul>\r\n              {counts.map(r => {\r\n                return (\r\n                  <li>\r\n                    {r.name}: {r.total}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <h1>Users:</h1>\r\n            <ul>\r\n              {users.map(r => {\r\n                return (\r\n                  <li>\r\n                    {r.name}, {r.class}: {r.chats}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <h1>Encounters:</h1>\r\n            <ul>\r\n              {encounters.map(r => {\r\n                console.log(r.name);\r\n                return (\r\n                  <li>\r\n                    {r.player.name}: {r.monster.name}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}