{"ast":null,"code":"var _jsxFileName = \"D:\\\\cdrlu\\\\Documents\\\\twitch_chatbot\\\\lubebot_site\\\\react-app\\\\src\\\\App.js\";\n// /client/App.js\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch // Redirect\n} from \"react-router-dom\";\nimport Home from \"./pages/Home\";\n\nclass App extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  // when component mounts, first thing it does is fetch all existing data in our db\n  // then we incorporate a polling logic so that we can easily see if our db has\n  // changed and implement those changes into our UI\n  componentDidMount() {} // never let a process live forever\n  // always kill a process everytime we are done using it\n\n\n  componentWillUnmount() {}\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Home, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\cdrlu\\Documents\\twitch_chatbot\\lubebot_site\\react-app\\src\\App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Home","App","componentDidMount","componentWillUnmount","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,CAIE;AAJF,OAKO,kBALP;AAMA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1B;AACA;AACA;AAEA;AACA;AACA;AACAO,EAAAA,iBAAiB,GAAG,CAAE,CARI,CAU1B;AACA;;;AACAC,EAAAA,oBAAoB,GAAG,CAAE;;AAEzBC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAE,MAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AAtByB;;AAyB5B,eAAeH,GAAf","sourcesContent":["// /client/App.js\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n  // Redirect\r\n} from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\n\r\nclass App extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  // when component mounts, first thing it does is fetch all existing data in our db\r\n  // then we incorporate a polling logic so that we can easily see if our db has\r\n  // changed and implement those changes into our UI\r\n  componentDidMount() {}\r\n\r\n  // never let a process live forever\r\n  // always kill a process everytime we are done using it\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Home />} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}